{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tatas\\\\OneDrive\\\\University\\\\Fall 2025\\\\CSCI 3428\\\\LLA\\\\src\\\\components\\\\DictionaryButton.js\",\n  _s = $RefreshSig$();\n/**\n * DictionaryButton.js\n * \n * Purpose: This component renders a button that opens a modal containing a dictionary\n *          of Mi'kmaq words and their English meanings. The button is styled and positioned\n *          on the page, and clicking it opens the dictionary in a modal.\n * \n * Author: Tooba Javed (A00468904)\n */\n\nimport React, { useState } from 'react';\nimport DictionaryModal from './DictionaryModal';\nimport DictionaryImage from './images/DictionaryImage.png';\n\n/**\n * DictionaryButton Component\n * \n * Purpose: Renders a button labeled \"Dictionary\" that, when clicked, opens a modal displaying\n *          Mi'kmaq words with English translations.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DictionaryButton = () => {\n  _s();\n  // State variable to control the visibility of the dictionary modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  /**\n   * openModal Function\n   * \n   * Purpose: Sets the state to open the modal by setting isModalOpen to true.\n   */\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Mobile-View flew lg:hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        //ID for locating the button on the mobile view\n        \"data-cy\": \"dictionary-button-mobile\",\n        className: \"w-[30vw] h-[7vh] bg-teal-600 text-gray-300 border border-teal-700 rounded-lg mt-0 shadow-sm hover:bg-teal-700 focus:outline-none focus:ring focus:ring-teal-800  transition-all font-comic flex items-center justify-center\",\n        onClick: openModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DictionaryImage,\n          className: \"h-[6vh]\",\n          alt: \"Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(DictionaryModal, {\n        closeModal: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Dektop-View hidden lg:flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        //ID for locating the button on the desktop view\n        \"data-cy\": \"dictionary-button-desktop\",\n        className: \"w-[8vw] bg-teal-600 text-gray-300 border border-teal-700 rounded-lg py-2 px-3  shadow-sm hover:bg-teal-700 focus:outline-none focus:ring focus:ring-teal-800  transition-all font-comic flex items-center justify-center\",\n        onClick: openModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DictionaryImage,\n          className: \"h-[5vh]\",\n          alt: \"Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(DictionaryModal, {\n        closeModal: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DictionaryButton, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = DictionaryButton;\nexport default DictionaryButton;\nvar _c;\n$RefreshReg$(_c, \"DictionaryButton\");","map":{"version":3,"names":["React","useState","DictionaryModal","DictionaryImage","jsxDEV","_jsxDEV","DictionaryButton","_s","isModalOpen","setIsModalOpen","openModal","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/tatas/OneDrive/University/Fall 2025/CSCI 3428/LLA/src/components/DictionaryButton.js"],"sourcesContent":["/**\n * DictionaryButton.js\n * \n * Purpose: This component renders a button that opens a modal containing a dictionary\n *          of Mi'kmaq words and their English meanings. The button is styled and positioned\n *          on the page, and clicking it opens the dictionary in a modal.\n * \n * Author: Tooba Javed (A00468904)\n */\n\nimport React, { useState } from 'react';\nimport DictionaryModal from './DictionaryModal';\nimport DictionaryImage from './images/DictionaryImage.png'\n\n/**\n * DictionaryButton Component\n * \n * Purpose: Renders a button labeled \"Dictionary\" that, when clicked, opens a modal displaying\n *          Mi'kmaq words with English translations.\n */\nconst DictionaryButton = () => {\n  // State variable to control the visibility of the dictionary modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  /**\n   * openModal Function\n   * \n   * Purpose: Sets the state to open the modal by setting isModalOpen to true.\n   */\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div>\n    <section className=\"Mobile-View flew lg:hidden\">\n      {/* Button that opens the dictionary modal */}\n      <button \n       //ID for locating the button on the mobile view\n      data-cy= \"dictionary-button-mobile\"\n        className=\"w-[30vw] h-[7vh] bg-teal-600 text-gray-300 border border-teal-700 rounded-lg mt-0\n                     shadow-sm hover:bg-teal-700 focus:outline-none focus:ring focus:ring-teal-800 \n                     transition-all font-comic flex items-center justify-center\" \n        onClick={openModal}\n      >\n        <img src={DictionaryImage} className='h-[6vh]' alt='Dictionary'></img>\n      </button>\n\n      {/* Conditionally render the DictionaryModal if isModalOpen is true */}\n      {isModalOpen && (\n        <DictionaryModal closeModal={() => setIsModalOpen(false)} />\n      )}\n    </section>\n    <section className=\"Dektop-View hidden lg:flex\">\n      {/* Button that opens the dictionary modal */}\n      <button \n      //ID for locating the button on the desktop view\n      data-cy =\"dictionary-button-desktop\"\n        className=\"w-[8vw] bg-teal-600 text-gray-300 border border-teal-700 rounded-lg py-2 px-3 \n                     shadow-sm hover:bg-teal-700 focus:outline-none focus:ring focus:ring-teal-800 \n                     transition-all font-comic flex items-center justify-center\" \n        onClick={openModal}\n      >\n        <img src={DictionaryImage} className='h-[5vh]'alt='Dictionary'></img>\n      </button>\n\n      {/* Conditionally render the DictionaryModal if isModalOpen is true */}\n      {isModalOpen && (\n        <DictionaryModal closeModal={() => setIsModalOpen(false)} />\n      )}\n    </section>\n    </div>\n  );\n};\n\nexport default DictionaryButton;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,8BAA8B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAErD;AACF;AACA;AACA;AACA;EACE,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAAM,QAAA,gBACAN,OAAA;MAASO,SAAS,EAAC,4BAA4B;MAAAD,QAAA,gBAE7CN,OAAA;QACC;QACD,WAAS,0BAA0B;QACjCO,SAAS,EAAC,6NAE8D;QACxEC,OAAO,EAAEH,SAAU;QAAAC,QAAA,eAEnBN,OAAA;UAAKS,GAAG,EAAEX,eAAgB;UAACS,SAAS,EAAC,SAAS;UAACG,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,EAGRX,WAAW,iBACVH,OAAA,CAACH,eAAe;QAACkB,UAAU,EAAEA,CAAA,KAAMX,cAAc,CAAC,KAAK;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACVd,OAAA;MAASO,SAAS,EAAC,4BAA4B;MAAAD,QAAA,gBAE7CN,OAAA;QACA;QACA,WAAS,2BAA2B;QAClCO,SAAS,EAAC,0NAE8D;QACxEC,OAAO,EAAEH,SAAU;QAAAC,QAAA,eAEnBN,OAAA;UAAKS,GAAG,EAAEX,eAAgB;UAACS,SAAS,EAAC,SAAS;UAAAG,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,EAGRX,WAAW,iBACVH,OAAA,CAACH,eAAe;QAACkB,UAAU,EAAEA,CAAA,KAAMX,cAAc,CAAC,KAAK;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACZ,EAAA,CArDID,gBAAgB;AAAAe,EAAA,GAAhBf,gBAAgB;AAuDtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}