{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tatas\\\\OneDrive\\\\University\\\\Fall 2025\\\\CSCI 3428\\\\LLA\\\\src\\\\components\\\\DictionaryModal.js\";\n/**\n * DictionaryModal.js\n * \n * Purpose: This component renders a modal displaying a grid of Mi'kmaq words alongside their\n *          English translations. Each word is represented on a flip card that, when clicked,\n *          flips to reveal an associated image and plays a pronunciation audio.\n * \n * Author: Tooba Javed (A00468904)\n */\n\nimport React from 'react';\nimport FlipCard from './FlipCard';\nimport { words } from './WordBank';\n\n/**\n * DictionaryModal Component\n * \n * Purpose: This component renders a modal containing a grid of flip cards. Each card displays\n *          a Mi'kmaq word with its English translation and flips on click to reveal an image\n *          and play audio.\n * \n * Parameters:\n * - closeModal: A function that closes the modal when the \"X\" button is clicked.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DictionaryModal = ({\n  closeModal\n}) => {\n  // Map through the 'words' array to create a list of FlipCard components.\n  // Each FlipCard receives 'mikmaq' and 'english' as props to display the word and its translation.\n  const flipCards = words.map((word, index) => /*#__PURE__*/_jsxDEV(FlipCard, {\n    mikmaqWord: word.mikmaq,\n    englishMeaning: word.english\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Mobile-View flex lg:hidden animate-fadeIn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          //ID for the pop-up in the mobile version to check if it opens when clicked\n          \"data-cy\": \"dictionary-modal\",\n          className: \"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[400px] max-h-[86vh] overflow-y-auto overflow-x-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"absolute bottom-[76vh] right-[3vw] text-red-700 text-8xl font-bold focus:outline-double\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-x-10 gap-y-4 mt-2 mr-10 align-center\",\n            children: flipCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Desktop-View hidden lg:flex animate-fadeIn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          //ID for the desktop version (if not added--> test crashes as there are 2 dictionary Modals)\n          \"data-cy\": \"dictionary-modal-desktop\",\n          className: \"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[80vw] max-h-[90vh] overflow-y-auto overflow-x-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"absolute top-0 right-[2vw] text-red-700 text-8xl font-bold focus:outline-double\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-5 gap-x-10 gap-y-4 mt-2 mr-10 align-center\",\n            children: flipCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = DictionaryModal;\nexport default DictionaryModal;\nvar _c;\n$RefreshReg$(_c, \"DictionaryModal\");","map":{"version":3,"names":["React","FlipCard","words","jsxDEV","_jsxDEV","DictionaryModal","closeModal","flipCards","map","word","index","mikmaqWord","mikmaq","englishMeaning","english","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tatas/OneDrive/University/Fall 2025/CSCI 3428/LLA/src/components/DictionaryModal.js"],"sourcesContent":["/**\n * DictionaryModal.js\n * \n * Purpose: This component renders a modal displaying a grid of Mi'kmaq words alongside their\n *          English translations. Each word is represented on a flip card that, when clicked,\n *          flips to reveal an associated image and plays a pronunciation audio.\n * \n * Author: Tooba Javed (A00468904)\n */\n\nimport React from 'react';\nimport FlipCard from './FlipCard';\nimport { words } from './WordBank';\n\n/**\n * DictionaryModal Component\n * \n * Purpose: This component renders a modal containing a grid of flip cards. Each card displays\n *          a Mi'kmaq word with its English translation and flips on click to reveal an image\n *          and play audio.\n * \n * Parameters:\n * - closeModal: A function that closes the modal when the \"X\" button is clicked.\n */\nconst DictionaryModal = ({ closeModal }) => {\n  \n  // Map through the 'words' array to create a list of FlipCard components.\n  // Each FlipCard receives 'mikmaq' and 'english' as props to display the word and its translation.\n  const flipCards = words.map((word, index) => (\n    <FlipCard \n      key={index} \n      mikmaqWord={word.mikmaq} \n      englishMeaning={word.english} \n    />\n  ));\n\n  return (\n    <div>\n      <section className=\"Mobile-View flex lg:hidden animate-fadeIn\">\n        <div className=\"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\">\n          {/* Modal container with a fixed background and centered content */}\n          <div \n          //ID for the pop-up in the mobile version to check if it opens when clicked\n          data-cy=\"dictionary-modal\"\n          className=\"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[400px] max-h-[86vh] overflow-y-auto overflow-x-hidden\">\n            \n            {/* Close button - allows the user to close the modal */}\n            <button \n              className=\"absolute bottom-[76vh] right-[3vw] text-red-700 text-8xl font-bold focus:outline-double\" \n              onClick={closeModal}\n            >\n              ×\n            </button>\n            \n            {/* Grid layout for displaying flip cards - set to two columns with spacing between cards */}\n            <div className=\"grid grid-cols-2 gap-x-10 gap-y-4 mt-2 mr-10 align-center\">\n              {flipCards}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Desktop-View hidden lg:flex animate-fadeIn\">\n      <div className=\"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\">\n          {/* Modal container with a fixed background and centered content */}\n          <div \n          //ID for the desktop version (if not added--> test crashes as there are 2 dictionary Modals)\n          data-cy=\"dictionary-modal-desktop\"\n          className=\"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[80vw] max-h-[90vh] overflow-y-auto overflow-x-hidden\">\n            \n            {/* Close button - allows the user to close the modal */}\n            <button \n              className=\"absolute top-0 right-[2vw] text-red-700 text-8xl font-bold focus:outline-double\" \n              onClick={closeModal}\n            >\n              ×\n            </button>\n            \n            {/* Grid layout for displaying flip cards - set to two columns with spacing between cards */}\n            <div className=\"grid grid-cols-5 gap-x-10 gap-y-4 mt-2 mr-10 align-center\">\n              {flipCards}\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default DictionaryModal;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,KAAK,QAAQ,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAE1C;EACA;EACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtCN,OAAA,CAACH,QAAQ;IAEPU,UAAU,EAAEF,IAAI,CAACG,MAAO;IACxBC,cAAc,EAAEJ,IAAI,CAACK;EAAQ,GAFxBJ,KAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGX,CACF,CAAC;EAEF,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAASgB,SAAS,EAAC,2CAA2C;MAAAD,QAAA,eAC5Df,OAAA;QAAKgB,SAAS,EAAC,yEAAyE;QAAAD,QAAA,eAEtFf,OAAA;UACA;UACA,WAAQ,kBAAkB;UAC1BgB,SAAS,EAAC,yGAAyG;UAAAD,QAAA,gBAGjHf,OAAA;YACEgB,SAAS,EAAC,yFAAyF;YACnGC,OAAO,EAAEf,UAAW;YAAAa,QAAA,EACrB;UAED;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAGTd,OAAA;YAAKgB,SAAS,EAAC,2DAA2D;YAAAD,QAAA,EACvEZ;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEVd,OAAA;MAASgB,SAAS,EAAC,4CAA4C;MAAAD,QAAA,eAC/Df,OAAA;QAAKgB,SAAS,EAAC,yEAAyE;QAAAD,QAAA,eAEpFf,OAAA;UACA;UACA,WAAQ,0BAA0B;UAClCgB,SAAS,EAAC,wGAAwG;UAAAD,QAAA,gBAGhHf,OAAA;YACEgB,SAAS,EAAC,iFAAiF;YAC3FC,OAAO,EAAEf,UAAW;YAAAa,QAAA,EACrB;UAED;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAGTd,OAAA;YAAKgB,SAAS,EAAC,2DAA2D;YAAAD,QAAA,EACvEZ;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACI,EAAA,GA/DIjB,eAAe;AAiErB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}