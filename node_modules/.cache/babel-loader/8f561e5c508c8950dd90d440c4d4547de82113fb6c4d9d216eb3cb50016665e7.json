{"ast":null,"code":"/**\n * DictionaryModal.js\n * \n * Purpose: This component renders a modal displaying a grid of Mi'kmaq words alongside their\n *          English translations. Each word is represented on a flip card that, when clicked,\n *          flips to reveal an associated image and plays a pronunciation audio.\n * \n * Author: Tooba Javed (A00468904)\n */import React from'react';import FlipCard from'./FlipCard';import{words}from'./WordBank';/**\n * DictionaryModal Component\n * \n * Purpose: This component renders a modal containing a grid of flip cards. Each card displays\n *          a Mi'kmaq word with its English translation and flips on click to reveal an image\n *          and play audio.\n * \n * Parameters:\n * - closeModal: A function that closes the modal when the \"X\" button is clicked.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DictionaryModal=_ref=>{let{closeModal}=_ref;// Map through the 'words' array to create a list of FlipCard components.\n// Each FlipCard receives 'mikmaq' and 'english' as props to display the word and its translation.\nconst flipCards=words.map((word,index)=>/*#__PURE__*/_jsx(FlipCard,{mikmaqWord:word.mikmaq,englishMeaning:word.english},index));return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"section\",{className:\"Mobile-View flex lg:hidden animate-fadeIn\",children:/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\",children:/*#__PURE__*/_jsxs(\"div\",{//ID for the pop-up in the mobile version to check if it opens when clicked\n\"data-cy\":\"dictionary-modal\",className:\"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[400px] max-h-[86vh] overflow-y-auto overflow-x-hidden\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"absolute bottom-[76vh] right-[3vw] text-red-700 text-8xl font-bold focus:outline-double\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-x-10 gap-y-4 mt-2 mr-10 align-center\",children:flipCards})]})})}),/*#__PURE__*/_jsx(\"section\",{className:\"Desktop-View hidden lg:flex animate-fadeIn\",children:/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\",children:/*#__PURE__*/_jsxs(\"div\",{//ID for the desktop version (if not added--> test crashes as there are 2 dictionary Modals)\n\"data-cy\":\"dictionary-modal-desktop\",className:\"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[80vw] max-h-[90vh] overflow-y-auto overflow-x-hidden\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"absolute top-0 right-[2vw] text-red-700 text-8xl font-bold focus:outline-double\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-5 gap-x-10 gap-y-4 mt-2 mr-10 align-center\",children:flipCards})]})})})]});};export default DictionaryModal;","map":{"version":3,"names":["React","FlipCard","words","jsx","_jsx","jsxs","_jsxs","DictionaryModal","_ref","closeModal","flipCards","map","word","index","mikmaqWord","mikmaq","englishMeaning","english","children","className","onClick"],"sources":["C:/Users/tatas/OneDrive/University/Fall 2025/CSCI 3428/LLA/src/components/DictionaryModal.js"],"sourcesContent":["/**\n * DictionaryModal.js\n * \n * Purpose: This component renders a modal displaying a grid of Mi'kmaq words alongside their\n *          English translations. Each word is represented on a flip card that, when clicked,\n *          flips to reveal an associated image and plays a pronunciation audio.\n * \n * Author: Tooba Javed (A00468904)\n */\n\nimport React from 'react';\nimport FlipCard from './FlipCard';\nimport { words } from './WordBank';\n\n/**\n * DictionaryModal Component\n * \n * Purpose: This component renders a modal containing a grid of flip cards. Each card displays\n *          a Mi'kmaq word with its English translation and flips on click to reveal an image\n *          and play audio.\n * \n * Parameters:\n * - closeModal: A function that closes the modal when the \"X\" button is clicked.\n */\nconst DictionaryModal = ({ closeModal }) => {\n  \n  // Map through the 'words' array to create a list of FlipCard components.\n  // Each FlipCard receives 'mikmaq' and 'english' as props to display the word and its translation.\n  const flipCards = words.map((word, index) => (\n    <FlipCard \n      key={index} \n      mikmaqWord={word.mikmaq} \n      englishMeaning={word.english} \n    />\n  ));\n\n  return (\n    <div>\n      <section className=\"Mobile-View flex lg:hidden animate-fadeIn\">\n        <div className=\"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\">\n          {/* Modal container with a fixed background and centered content */}\n          <div \n          //ID for the pop-up in the mobile version to check if it opens when clicked\n          data-cy=\"dictionary-modal\"\n          className=\"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[400px] max-h-[86vh] overflow-y-auto overflow-x-hidden\">\n            \n            {/* Close button - allows the user to close the modal */}\n            <button \n              className=\"absolute bottom-[76vh] right-[3vw] text-red-700 text-8xl font-bold focus:outline-double\" \n              onClick={closeModal}\n            >\n              ×\n            </button>\n            \n            {/* Grid layout for displaying flip cards - set to two columns with spacing between cards */}\n            <div className=\"grid grid-cols-2 gap-x-10 gap-y-4 mt-2 mr-10 align-center\">\n              {flipCards}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Desktop-View hidden lg:flex animate-fadeIn\">\n      <div className=\"fixed inset-0 bg-opacity-50 flex justify-center items-center font-comic\">\n          {/* Modal container with a fixed background and centered content */}\n          <div \n          //ID for the desktop version (if not added--> test crashes as there are 2 dictionary Modals)\n          data-cy=\"dictionary-modal-desktop\"\n          className=\"bg-red-200 rounded-lg p-8 relative w-[98%] max-w-[80vw] max-h-[90vh] overflow-y-auto overflow-x-hidden\">\n            \n            {/* Close button - allows the user to close the modal */}\n            <button \n              className=\"absolute top-0 right-[2vw] text-red-700 text-8xl font-bold focus:outline-double\" \n              onClick={closeModal}\n            >\n              ×\n            </button>\n            \n            {/* Grid layout for displaying flip cards - set to two columns with spacing between cards */}\n            <div className=\"grid grid-cols-5 gap-x-10 gap-y-4 mt-2 mr-10 align-center\">\n              {flipCards}\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default DictionaryModal;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,OAASC,KAAK,KAAQ,YAAY,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAUA,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAErC;AACA;AACA,KAAM,CAAAE,SAAS,CAAGR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACtCT,IAAA,CAACH,QAAQ,EAEPa,UAAU,CAAEF,IAAI,CAACG,MAAO,CACxBC,cAAc,CAAEJ,IAAI,CAACK,OAAQ,EAFxBJ,KAGN,CACF,CAAC,CAEF,mBACEP,KAAA,QAAAY,QAAA,eACEd,IAAA,YAASe,SAAS,CAAC,2CAA2C,CAAAD,QAAA,cAC5Dd,IAAA,QAAKe,SAAS,CAAC,yEAAyE,CAAAD,QAAA,cAEtFZ,KAAA,QACA;AACA,UAAQ,kBAAkB,CAC1Ba,SAAS,CAAC,yGAAyG,CAAAD,QAAA,eAGjHd,IAAA,WACEe,SAAS,CAAC,yFAAyF,CACnGC,OAAO,CAAEX,UAAW,CAAAS,QAAA,CACrB,MAED,CAAQ,CAAC,cAGTd,IAAA,QAAKe,SAAS,CAAC,2DAA2D,CAAAD,QAAA,CACvER,SAAS,CACP,CAAC,EACH,CAAC,CACH,CAAC,CACC,CAAC,cAEVN,IAAA,YAASe,SAAS,CAAC,4CAA4C,CAAAD,QAAA,cAC/Dd,IAAA,QAAKe,SAAS,CAAC,yEAAyE,CAAAD,QAAA,cAEpFZ,KAAA,QACA;AACA,UAAQ,0BAA0B,CAClCa,SAAS,CAAC,wGAAwG,CAAAD,QAAA,eAGhHd,IAAA,WACEe,SAAS,CAAC,iFAAiF,CAC3FC,OAAO,CAAEX,UAAW,CAAAS,QAAA,CACrB,MAED,CAAQ,CAAC,cAGTd,IAAA,QAAKe,SAAS,CAAC,2DAA2D,CAAAD,QAAA,CACvER,SAAS,CACP,CAAC,EACH,CAAC,CACH,CAAC,CACC,CAAC,EACP,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}